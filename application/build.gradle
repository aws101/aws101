plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'dev.stratospheric'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', 'Hoxton.SR6')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws'
  implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.webjars:webjars-locator-core'
  implementation 'org.webjars:sockjs-client:1.1.2'
  implementation 'org.webjars:stomp-websocket:2.3.3-1'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
  implementation 'com.amazonaws:aws-java-sdk-cognitoidp'
  implementation 'com.amazonaws:aws-java-sdk-ses'
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
  def testcontainersVersion = '1.15.0-rc2'
  testCompile('org.testcontainers:localstack:' + testcontainersVersion)
  testCompile('org.testcontainers:junit-jupiter:' + testcontainersVersion)
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

bootRun {
  jvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
    "-Dspring.profiles.active=dev",
  ]
}
