AWSTemplateFormatVersion: '2010-09-09'
Description: Deploys a Cognito stack.
Parameters:
  AuthName:
    Type: String
    Description: Unique AuthName for Cognito resources
  ExternalUrl:
    Type: String
    Description: The external URL of the application

Resources:
  # Creates a UserPool in Cognito for an app to authenticate against.
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Sub ${AuthName}-user-pool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: True
      AutoVerifiedAttributes:
        - email
      AliasAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: True
      MfaConfiguration: "OFF"
      EmailConfiguration:
        EmailSendingAccount: "COGNITO_DEFAULT"
      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: True
          RequireUppercase: True
          TemporaryPasswordValidityDays: 7
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: !Sub ${AuthName}-client
      GenerateSecret: true
      UserPoolId: !Ref UserPool
      CallbackURLs:
        - !Sub ${ExternalUrl}/login/oauth2/code/cognito
        - http://localhost:8080/login/oauth2/code/cognito
      SupportedIdentityProviders:
        - "COGNITO"
      AllowedOAuthFlowsUserPoolClient: True
      AllowedOAuthFlows:
        - "code"
      AllowedOAuthScopes:
        - "email"
        - "openid"
        - "profile"
      PreventUserExistenceErrors: "ENABLED"
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref UserPool
      Domain: "dev101"
Outputs:
  UserPoolId:
    Value: !Ref UserPool
    Export:
      Name: "UserPool::Id"
  UserPoolClientId:
    Value: !Ref UserPoolClient
    Export:
      Name: "UserPoolClient::Id"